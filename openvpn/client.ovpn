###########################################################
#######                   OpenVPN                   #######
#######                       Client                #######
###########################################################
#
# Arquivo de configuracao para o cliente
# Criado por Tobias Sette <contato@tobias.ws>
# xx/xx/2012 - v0.1 - Início
# xx/xx/2012 - v0.2 - 
# 01/06/2012 - v0.3 - reformulado com base no OpenVPN do Debian Squeeze (OpenVPN 2.2.x)
# 10/07/2015 - v0.4 - reformulado com base no OpenVPN do Debian Jessie (OpenVPN 2.3.x)
#
# Este arquivo de configuração foi testado, sem modificações significativas,
# nas seguintes versões do OpenVPN:
#-> OpenVPN 2.3.4 x86_64 (Debian testing stretch)


##############################
#     Notas
##############################

# Carregue o module tun do kernel (modprobe tun) e
# certifique-se que ele está sendo carregado na
# inicializacao do sistema. O mais comum é ser
# chamado no arquivo /etc/modules

# Para testar os arquivos de configuracao:
# openvpn --config /etc/openvpn/arquivo.conf

# Os hosts tem que estar com o horario correto; utilize
# ntpdate -u pool.ntp.org para atualizar

# Este arquivo deve funcionar em diversos sistemas. No windows,
# lembre-se de escapar nomes completos de arquivos, como em
# "C:\\Foo\\Bar\\foo.key", e renomeie este arquivo para a extensao .ovpn


##############################
#     Dados da conexao
##############################

# Define que esta maquina é um cliente e que obterá configurações do servidor
client

# Na maior parte das vezes o cliente não precisa utilizar uma porta local
# específica
nobind

# Endereco do host no qual se vai conectar. Especificar
# mais de um e remote-random faz com que o cliente escolha um
# servidor (ativo) aleatoriamente a cada conexao, criando redundância
# e balanceamento de carga. Não especificar remote-random faz com que
# a escolha do servidor ocorra na ordem em que foram especificados.
# O segundo parâmetro especifica a porta na qual o OpenVPN irá rodar.
# Por padrao (e caso omitida) a porta 1194 eh utilizada
remote $meuServidor 1194
;remote-random

# Define o protocolo a ser utilizado.
# Por padrao (e caso omtido) o protocolo udp é utilizado.
# Utilizar udp preferencialmente, pois este protocolo
# não faz correção/redundancia dos pacotes. O OpenVPN
# apenas cria a conexão, em cima dela rodarão os protocolos
# cabiveis (tcp, udp, etc), não sendo necessário utilizar
# correção de erros nesta camada.
# Para utiliza protocolo tcp:
;proto tcp-server
proto udp

# Se você está conetando à internet através de um proxy HTTP, defina o parâmetro
# http-proxy.
# http-proxy-retry faz com que uma nova tentativa seja feita em casa de falha
# de conexão
;http-proxy-retry
;http-proxy $ip $porta


##############################
#     Interface de rede
##############################

# Define qual interface, e de qual tipo, ira responder
# pela VPN
# No tun o trafego da rede é roteado eliminando pacotes de
# broadcast, no tap é criado uma interface ethernet onde tudo é transmitido.
# No windows você deve especificar um número para a interface, como em tun0.
dev tun

# No Windows é necessário especificar o nome do adapator TAP-Win32
# a partir do painel de conexões de rede, se você tiver mais de um.
;dev-node MyTap


# IP manual
# para interface tun (local, remoto)
# ifconfig 192.168.100.2 192.168.100.1
# para interface tap (local, mascara de rede)
# ifconfig 192.168.100.1 255.255.255.0
# Para rotear os pacotes, utilize:
# route add -net 192.168.5.0 netmask 255.255.255.0 gw 192.168.100.1 dev tun0
# sendo 192.168.5.0 a faixa da rede local ligada ao servidor


##############################
#           Rotas
##############################

# Cliente puxa (pull) configurações do servidor
;pull


##############################
#   Qualidade da conexão
##############################

# Pinga o host remoto a cada $x segundos sem atividade na rede, se ele
# nao responder por $z segundos a conexão é reiniciada.
# Quando a conexão é interrompida o cliente tenta restabelece-la
# periodicamente
# Uso: keepalive $x $z
keepalive 10 120

# Compacta os dados da conexão utilizando o pacote lzo (deve estar
# instalado no host), com um pequeno aumento de processamento.
# Se estiver habilitado no servidor, o cliente também deve habilitar
comp-lzo

# mantem as chaves carregadas mesmo durante o reinicio do serviço.
persist-key

# mantem o tunel aberto mesmo durante o reinicio do serviço.
persist-tun

# Fica tentando, indefinidamente, resolver o nome do host do servidor. Útil
# em hosts que não estão permanentemente conectados à internet.
resolv-retry infinite

# Tenta realizar a reconexao com host remoto por $x segundos
;inactive 3600

# mantem o tunel aberto mesmo se o ip do outro host mudar
float

# lmita o trafego de saida do Openvpn a N bytes.
;shaper 51200

# Redes wireless frequentemente produzem muitos pacotes duplicados. O parâmetro
# abaixo faz com que os avisos de pacotes duplicados sejam silenciados
;mute-replay-warnings


##############################
#      Autenticacao
##############################

# Faz com que o cliente verifique se o certificado do servidor tem o campo
# nsCertType definido para "server". Precaução importante para evitar MITM [4]
ns-cert-type server

# Utilizando a mesma chave, estatica, nos dois hosts
# para gerar: openvpn --genkey --secret /etc/openvpn/keys/estatica.key
# depois copiar para o outro host
;secret estatica.key

# Define que as solicitações de conexão devem ser encriptadas
# com ta.key. É útil para bloquear ataques DoS e flood na porta UDP.
# O segundo parâmetro deve ser 0 no servidor e 1 no cliente.
# Copiar ta.key para cada host que vá se conectar.
# para gerar: openvpn --genkey --secret /etc/openvpn/keys/ta.key
;tls-auth /etc/openvpn/keys/ta.key 1

# Define qual a cifra criptográfica. Esta configuração deve ser igual no
# cliente.
;cipher BF-CBC        # Blowfish (padrão)
;cipher AES-128-CBC   # AES
;cipher DES-EDE3-CBC  # Triple-DES


##############################
#      Certificados X509
##############################


# Parametro necessario para utilizar conexão com certificados X509
tls-client

# Caminho para o arquivo contendo parametros Diffie Hellman
dh dh2048.pem

# Local do arquivo de certificado (.crt) da unidade certificadora
ca ca.crt

# Local do arquivo de certificado (.crt) do cliente
cert $nomeCliente.crt

# Local da chave (.key) do cliente. Este arquivo deve ser mantido secreto
key $nomeCliente.key


##############################
#           Outros
##############################

# É uma boa prática diminuir os privilégios do OpenVPN após a inicialização.
# Utilize estas opções em clientes não Windows.
# Note que as opções persist-key e persist-tun podem ser habilitadas
# para evitar erros de acesso a recursos que podem ficam indisponíveis depois
# da redução de privilégios
user nobody
group nogroup

# Grava um curto arquivo de status mostrando conexões atuais. O arquivo é
# truncado e reescrito a cada minuto.
status openvpn-status.log

# Por padrão as mensagens de log vão para o syslog (ou no Windows, se rodando
# como serviço, vão para o diretório "\Program Files\OpenVPN\log"). Utilize log
# ou log-append para sobrescrever este comportamento.
# log irá truncar o arquivo de log a cda inicialização do OpenVPN, enquanto
# log-append irá acrescentar nele. Use um dos dois.
;log         openvpn.log
;log-append  openvpn.log

# Define o quão verboso será o log.
# 0 é silencioso, exceto por erros fatais
# 4 é rasoável para o uso geral
# 5 e 6 podem ajudá-lo a debugar problemas de conexão
# 9 é extremamente verboso
verb 3

# Ignora mensagens repetidas. Até x mensagens sequenciais da mesma categoria
# serão escritas no log
;mute 20


##############################
#      Referencias
##############################

# [0] www.hardware.com.br/tutoriais/openvpn/
# [1] www.hardware.com.br/tutoriais/openvpn_2/
# [2] /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz (Debian Squeeze)
# [3] /usr/share/doc/openvpn/examples/sample-config-files/client.conf (Debian Jessie)
# [4] http://openvpn.net/howto.html#mitm

#EOF
